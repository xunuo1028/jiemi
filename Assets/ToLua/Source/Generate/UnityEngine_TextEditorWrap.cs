//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_TextEditorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.TextEditor), typeof(System.Object));
		L.RegFunction("OnFocus", OnFocus);
		L.RegFunction("OnLostFocus", OnLostFocus);
		L.RegFunction("HandleKeyEvent", HandleKeyEvent);
		L.RegFunction("DeleteLineBack", DeleteLineBack);
		L.RegFunction("DeleteWordBack", DeleteWordBack);
		L.RegFunction("DeleteWordForward", DeleteWordForward);
		L.RegFunction("Delete", Delete);
		L.RegFunction("CanPaste", CanPaste);
		L.RegFunction("Backspace", Backspace);
		L.RegFunction("SelectAll", SelectAll);
		L.RegFunction("SelectNone", SelectNone);
		L.RegFunction("DeleteSelection", DeleteSelection);
		L.RegFunction("ReplaceSelection", ReplaceSelection);
		L.RegFunction("Insert", Insert);
		L.RegFunction("MoveSelectionToAltCursor", MoveSelectionToAltCursor);
		L.RegFunction("MoveRight", MoveRight);
		L.RegFunction("MoveLeft", MoveLeft);
		L.RegFunction("MoveUp", MoveUp);
		L.RegFunction("MoveDown", MoveDown);
		L.RegFunction("MoveLineStart", MoveLineStart);
		L.RegFunction("MoveLineEnd", MoveLineEnd);
		L.RegFunction("MoveGraphicalLineStart", MoveGraphicalLineStart);
		L.RegFunction("MoveGraphicalLineEnd", MoveGraphicalLineEnd);
		L.RegFunction("MoveTextStart", MoveTextStart);
		L.RegFunction("MoveTextEnd", MoveTextEnd);
		L.RegFunction("MoveParagraphForward", MoveParagraphForward);
		L.RegFunction("MoveParagraphBackward", MoveParagraphBackward);
		L.RegFunction("MoveCursorToPosition", MoveCursorToPosition);
		L.RegFunction("MoveAltCursorToPosition", MoveAltCursorToPosition);
		L.RegFunction("IsOverSelection", IsOverSelection);
		L.RegFunction("SelectToPosition", SelectToPosition);
		L.RegFunction("SelectLeft", SelectLeft);
		L.RegFunction("SelectRight", SelectRight);
		L.RegFunction("SelectUp", SelectUp);
		L.RegFunction("SelectDown", SelectDown);
		L.RegFunction("SelectTextEnd", SelectTextEnd);
		L.RegFunction("SelectTextStart", SelectTextStart);
		L.RegFunction("MouseDragSelectsWholeWords", MouseDragSelectsWholeWords);
		L.RegFunction("DblClickSnap", DblClickSnap);
		L.RegFunction("MoveWordRight", MoveWordRight);
		L.RegFunction("MoveToStartOfNextWord", MoveToStartOfNextWord);
		L.RegFunction("MoveToEndOfPreviousWord", MoveToEndOfPreviousWord);
		L.RegFunction("SelectToStartOfNextWord", SelectToStartOfNextWord);
		L.RegFunction("SelectToEndOfPreviousWord", SelectToEndOfPreviousWord);
		L.RegFunction("FindStartOfNextWord", FindStartOfNextWord);
		L.RegFunction("MoveWordLeft", MoveWordLeft);
		L.RegFunction("SelectWordRight", SelectWordRight);
		L.RegFunction("SelectWordLeft", SelectWordLeft);
		L.RegFunction("ExpandSelectGraphicalLineStart", ExpandSelectGraphicalLineStart);
		L.RegFunction("ExpandSelectGraphicalLineEnd", ExpandSelectGraphicalLineEnd);
		L.RegFunction("SelectGraphicalLineStart", SelectGraphicalLineStart);
		L.RegFunction("SelectGraphicalLineEnd", SelectGraphicalLineEnd);
		L.RegFunction("SelectParagraphForward", SelectParagraphForward);
		L.RegFunction("SelectParagraphBackward", SelectParagraphBackward);
		L.RegFunction("SelectCurrentWord", SelectCurrentWord);
		L.RegFunction("SelectCurrentParagraph", SelectCurrentParagraph);
		L.RegFunction("UpdateScrollOffsetIfNeeded", UpdateScrollOffsetIfNeeded);
		L.RegFunction("DrawCursor", DrawCursor);
		L.RegFunction("SaveBackup", SaveBackup);
		L.RegFunction("Undo", Undo);
		L.RegFunction("Cut", Cut);
		L.RegFunction("Copy", Copy);
		L.RegFunction("Paste", Paste);
		L.RegFunction("DetectFocusChange", DetectFocusChange);
		L.RegFunction("New", _CreateUnityEngine_TextEditor);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("keyboardOnScreen", get_keyboardOnScreen, set_keyboardOnScreen);
		L.RegVar("controlID", get_controlID, set_controlID);
		L.RegVar("style", get_style, set_style);
		L.RegVar("multiline", get_multiline, set_multiline);
		L.RegVar("hasHorizontalCursorPos", get_hasHorizontalCursorPos, set_hasHorizontalCursorPos);
		L.RegVar("isPasswordField", get_isPasswordField, set_isPasswordField);
		L.RegVar("scrollOffset", get_scrollOffset, set_scrollOffset);
		L.RegVar("graphicalCursorPos", get_graphicalCursorPos, set_graphicalCursorPos);
		L.RegVar("graphicalSelectCursorPos", get_graphicalSelectCursorPos, set_graphicalSelectCursorPos);
		L.RegVar("text", get_text, set_text);
		L.RegVar("position", get_position, set_position);
		L.RegVar("cursorIndex", get_cursorIndex, set_cursorIndex);
		L.RegVar("selectIndex", get_selectIndex, set_selectIndex);
		L.RegVar("hasSelection", get_hasSelection, null);
		L.RegVar("SelectedText", get_SelectedText, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_TextEditor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.TextEditor obj = new UnityEngine.TextEditor();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.TextEditor.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFocus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.OnFocus();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLostFocus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.OnLostFocus();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HandleKeyEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.Event arg0 = (UnityEngine.Event)ToLua.CheckObject(L, 2, typeof(UnityEngine.Event));
			bool o = obj.HandleKeyEvent(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteLineBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.DeleteLineBack();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteWordBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.DeleteWordBack();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteWordForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.DeleteWordForward();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Delete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.Delete();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CanPaste(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.CanPaste();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Backspace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.Backspace();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectNone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectNone();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteSelection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.DeleteSelection();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReplaceSelection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			string arg0 = ToLua.CheckString(L, 2);
			obj.ReplaceSelection(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Insert(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			char arg0 = (char)LuaDLL.luaL_checknumber(L, 2);
			obj.Insert(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveSelectionToAltCursor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveSelectionToAltCursor();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveRight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveRight();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveLeft(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveLeft();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveUp();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveDown();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveLineStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveLineStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveLineEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveLineEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveGraphicalLineStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveGraphicalLineStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveGraphicalLineEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveGraphicalLineEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveTextStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveTextStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveTextEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveTextEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveParagraphForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveParagraphForward();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveParagraphBackward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveParagraphBackward();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveCursorToPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.MoveCursorToPosition(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveAltCursorToPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.MoveAltCursorToPosition(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsOverSelection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			bool o = obj.IsOverSelection(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectToPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.SelectToPosition(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectLeft(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectLeft();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectRight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectRight();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectUp();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectDown();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectTextEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectTextEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectTextStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectTextStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MouseDragSelectsWholeWords(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.MouseDragSelectsWholeWords(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DblClickSnap(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			UnityEngine.TextEditor.DblClickSnapping arg0 = (UnityEngine.TextEditor.DblClickSnapping)ToLua.CheckObject(L, 2, typeof(UnityEngine.TextEditor.DblClickSnapping));
			obj.DblClickSnap(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveWordRight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveWordRight();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveToStartOfNextWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveToStartOfNextWord();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveToEndOfPreviousWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveToEndOfPreviousWord();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectToStartOfNextWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectToStartOfNextWord();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectToEndOfPreviousWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectToEndOfPreviousWord();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindStartOfNextWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.FindStartOfNextWord(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveWordLeft(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.MoveWordLeft();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectWordRight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectWordRight();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectWordLeft(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectWordLeft();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExpandSelectGraphicalLineStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.ExpandSelectGraphicalLineStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExpandSelectGraphicalLineEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.ExpandSelectGraphicalLineEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectGraphicalLineStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectGraphicalLineStart();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectGraphicalLineEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectGraphicalLineEnd();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectParagraphForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectParagraphForward();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectParagraphBackward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectParagraphBackward();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectCurrentWord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectCurrentWord();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectCurrentParagraph(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SelectCurrentParagraph();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateScrollOffsetIfNeeded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.UpdateScrollOffsetIfNeeded();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawCursor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			string arg0 = ToLua.CheckString(L, 2);
			obj.DrawCursor(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveBackup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.SaveBackup();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Undo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.Undo();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Cut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.Cut();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Copy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.Copy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Paste(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			bool o = obj.Paste();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DetectFocusChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)ToLua.CheckObject(L, 1, typeof(UnityEngine.TextEditor));
			obj.DetectFocusChange();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_keyboardOnScreen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.TouchScreenKeyboard ret = obj.keyboardOnScreen;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index keyboardOnScreen on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_controlID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int ret = obj.controlID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index controlID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_style(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.GUIStyle ret = obj.style;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index style on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_multiline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool ret = obj.multiline;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index multiline on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hasHorizontalCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool ret = obj.hasHorizontalCursorPos;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hasHorizontalCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isPasswordField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool ret = obj.isPasswordField;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isPasswordField on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scrollOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 ret = obj.scrollOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index scrollOffset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphicalCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 ret = obj.graphicalCursorPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index graphicalCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_graphicalSelectCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 ret = obj.graphicalSelectCursorPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index graphicalSelectCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			string ret = obj.text;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index text on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Rect ret = obj.position;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index position on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cursorIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int ret = obj.cursorIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cursorIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_selectIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int ret = obj.selectIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index selectIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hasSelection(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool ret = obj.hasSelection;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hasSelection on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SelectedText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			string ret = obj.SelectedText;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SelectedText on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_keyboardOnScreen(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.TouchScreenKeyboard arg0 = (UnityEngine.TouchScreenKeyboard)ToLua.CheckObject(L, 2, typeof(UnityEngine.TouchScreenKeyboard));
			obj.keyboardOnScreen = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index keyboardOnScreen on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_controlID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.controlID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index controlID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_style(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.GUIStyle arg0 = (UnityEngine.GUIStyle)ToLua.CheckObject(L, 2, typeof(UnityEngine.GUIStyle));
			obj.style = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index style on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_multiline(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.multiline = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index multiline on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hasHorizontalCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.hasHorizontalCursorPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hasHorizontalCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isPasswordField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isPasswordField = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isPasswordField on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scrollOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.scrollOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index scrollOffset on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_graphicalCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.graphicalCursorPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index graphicalCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_graphicalSelectCursorPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.graphicalSelectCursorPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index graphicalSelectCursorPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_text(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.text = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index text on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rect));
			obj.position = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index position on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cursorIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.cursorIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cursorIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_selectIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.TextEditor obj = (UnityEngine.TextEditor)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.selectIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index selectIndex on a nil value" : e.Message);
		}
	}
}

